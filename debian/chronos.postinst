#!/bin/sh

# @file chronos.postinst
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2013  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

NAME=chronos
log_directory=/var/log/$NAME

MONIT_CONF_DIR=/etc/monit/conf.d
MONIT_CONF_FILE=$MONIT_CONF_DIR/chronos.monit

SRC_CONF_DIR=/usr/share/chronos
MONIT_SRC_CONF_FILE=$SRC_CONF_DIR/chronos.monit

#
# Function to set up the user account for the daemon
#
setup_user() {
  if ! grep -q "^$NAME:" /etc/passwd ; then useradd --system -M -d /nonexistent -s /bin/false $NAME ; fi
}

#
# Function to ensure logging directory is in place and has the right permissions
#
setup_logging() {
  if [ ! -d "$log_directory" ]; then
    mkdir -p $log_directory
  fi
  chown $NAME $log_directory
}

case "$1" in
  configure)
    setup_user
    setup_logging
    install $MONIT_SRC_CONF_FILE $MONIT_CONF_FILE
    reload clearwater-monit || true

    # Stop the cluster/queue/config manager, so that it is restarted by Monit
    # and picks up the new Chronos plugins. We check whether the process is
    # installed to avoid warning logs when etcd isn't being used
    if [ -x "/etc/init.d/clearwater-cluster-manager" ]; then
      service clearwater-cluster-manager stop || /bin/true
    fi

    if [ -x "/etc/init.d/clearwater-config-manager" ]; then
      service clearwater-config-manager stop || /bin/true
    fi

    if [ -x "/etc/init.d/clearwater-queue-manager" ]; then
      service clearwater-queue-manager stop || /bin/true
    fi

    # Restart Chronos.  Always do this by terminating chronos so monit will
    # restart it more-or-less immediately.  (monit restart seems to have
    # significant lag.)
    # Don't fail if it's already stopped.
    service chronos stop || true
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
